{
	"name": "weatheractivities",
	"properties": {
		"activities": [
			{
				"name": "Openweather",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://OpenwheatherAPI.vault.azure.net/secrets/OpeneatherAPI?api-version=7.0",
					"body": {
						"name": "test",
						"file": "abfs://scripts@manhernastorage.blob.core.windows.net/p-scala-spark-1.0-SNAPSHOT.jar",
						"className": "euclidobservability.spark.ScalaSparkListenerTest",
						"args": [],
						"jars": [
							"abfs://scripts@manhernastorage.blob.core.windows.net/jars/p-TelemetrySDK-1.2.0-jar-with-dependencies.jar"
						],
						"files": [],
						"archives": [],
						"conf": null,
						"driverMemory": "4g",
						"driverCores": 4,
						"executorMemory": "2g",
						"executorCores": 1,
						"numExecutors": 1
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Openweather",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, div(sub(ticks(pipeline().parameters.endDate), ticks(pipeline().parameters.startDate)), 604800000000))\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource1",
									"type": "DatasetReference",
									"parameters": {
										"startDate": {
											"value": "@addDays(pipeline().parameters.startDate, mul(item(), 7), 'yyyy-MM-dd')\n",
											"type": "Expression"
										},
										"endDate": {
											"value": "@addDays(pipeline().parameters.startDate, add(mul(item(), 7), 7), 'yyyy-MM-dd')\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json1",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"startDate": {
				"type": "string",
				"defaultValue": "@addDays(utcNow(), -365, 'yyyy-MM-dd')"
			},
			"endDate": {
				"type": "string",
				"defaultValue": "@utcNow('yyyy-MM-dd')"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-04-20T22:02:37Z"
	}
}